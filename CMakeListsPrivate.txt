# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "mzeroproUSB" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)

set(CLION_SVD_FILE_PATH "$ENV{HOME}/.platformio/platforms/atmelsam/misc/svd/ATSAMD21G18A.svd" CACHE FILEPATH "Peripheral Registers Definitions File" FORCE)

SET(CMAKE_C_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/bin/arm-none-eabi-gcc")
SET(CMAKE_CXX_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/bin/arm-none-eabi-g++")
SET(CMAKE_CXX_FLAGS "-fno-rtti -fno-exceptions -std=gnu++11 -fno-threadsafe-statics -Os -ffunction-sections -fdata-sections -Wall -mcpu=cortex-m0plus -mthumb -nostdlib --param max-inline-insns-single=500")
SET(CMAKE_C_FLAGS "-std=gnu11 -Os -ffunction-sections -fdata-sections -Wall -mcpu=cortex-m0plus -mthumb -nostdlib --param max-inline-insns-single=500")

SET(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 11)

if (CMAKE_BUILD_TYPE MATCHES "mzeroproUSB")
    add_definitions(-D'PLATFORMIO=50101')
    add_definitions(-D'ARDUINO_SAMD_ZERO')
    add_definitions(-D'__SAMD21G18A__')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'F_CPU=48000000L')
    add_definitions(-D'USBCON')
    add_definitions(-D'USB_VID=0x2A03')
    add_definitions(-D'USB_PID=0x804F')
    add_definitions(-D'USB_PRODUCT=\"Arduino M0 Pro\"')
    add_definitions(-D'USB_MANUFACTURER=\"Arduino\"')
    add_definitions(-D'ARDUINO_ARCH_SAMD')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/cores/arduino/api/deprecated")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/cores/arduino/api/deprecated-avr-comp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis-atmel/CMSIS/Device/ATMEL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/variants/arduino_mzero")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/HID")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/I2S/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SAMD_AnalogCorrection/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SAMD_BootloaderUpdater/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SBU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SDU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SFU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SNU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SPI")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SSU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/USBHost/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mzeroproUSB/*.*
    )
endif()


FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
